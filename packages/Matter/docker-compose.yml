# this was copied/inspired from laravel sail, works like a charm.
# kudos to them!
# For more information: https://laravel.com/docs/sail

version: '3'
services:
    app:
        build:
            context: ../Runtime/docker/php/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP:-hexxore}'
        image: app-php-8.1/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:8000'
        environment:
            WWWUSER: '${WWWUSER:-hexxore}'
            APP_DEBUG: 1
            XDEBUG_MODE: '${XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - hexxore
            
        # depends_on:
        #     - mysql
        #     - pgsql
        #     - mariadb
        #     - redis
        #     - meilisearch
        #     - minio
        #     - selenium
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'hexxore-mysql:/var/lib/mysql'
            - '../Runtime/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - hexxore
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    mongodb:
        image: mongo:latest
        container_name: mongodb
        ports:
            - '${FORWARD_MONGO_PORT:-27017}:27017'
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
        networks:
            - hexxore
        volumes:
            - 'hexxore-mongodb:/data/db'

    mongo-express:
        image: mongo-express:latest
        container_name: mongo-express
        restart: always
        networks:
            - hexxore
        depends_on:
            - mongodb
        ports:
            - '${FORWARD_MONGO_EXPRESS_PORT:-8081}:8081'
        environment:
            ME_CONFIG_MONGODB_SERVER: mongodb
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASSWORD}
            ME_CONFIG_BASICAUTH_USERNAME: hexxore
            ME_CONFIG_BASICAUTH_PASSWORD: hexxore
       
    # pgsql:
    #     image: 'postgres:14'
    #     ports:
    #         - '${FORWARD_DB_PORT:-5432}:5432'
    #     environment:
    #         PGPASSWORD: '${DB_PASSWORD:-secret}'
    #         POSTGRES_DB: '${DB_DATABASE}'
    #         POSTGRES_USER: '${DB_USERNAME}'
    #         POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    #     volumes:
    #         - 'hexxore-pgsql:/var/lib/postgresql/data'
    #         - './vendor/laravel/hexxore/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    #     networks:
    #         - hexxore
    #     healthcheck:
    #         test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
    #         retries: 3
    #         timeout: 5s
    # mariadb:
    #     image: 'mariadb:10'
    #     ports:
    #         - '${FORWARD_DB_PORT:-3306}:3306'
    #     environment:
    #         MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
    #         MYSQL_ROOT_HOST: "%"
    #         MYSQL_DATABASE: '${DB_DATABASE}'
    #         MYSQL_USER: '${DB_USERNAME}'
    #         MYSQL_PASSWORD: '${DB_PASSWORD}'
    #         MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    #     volumes:
    #         - 'hexxore-mariadb:/var/lib/mysql'
    #         - './vendor/laravel/hexxore/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    #     networks:
    #         - hexxore
    #     healthcheck:
    #         test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
    #         retries: 3
    #         timeout: 5s
    # redis:
    #     image: 'redis:alpine'
    #     ports:
    #         - '${FORWARD_REDIS_PORT:-6379}:6379'
    #     volumes:
    #         - 'hexxore-redis:/data'
    #     networks:
    #         - hexxore
    #     healthcheck:
    #         test: ["CMD", "redis-cli", "ping"]
    #         retries: 3
    #         timeout: 5s
    # memcached:
    #     image: 'memcached:alpine'
    #     ports:
    #         - '11211:11211'
    #     networks:
    #         - hexxore
    # meilisearch:
    #     image: 'getmeili/meilisearch:latest'
    #     ports:
    #         - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
    #     volumes:
    #         - 'hexxore-meilisearch:/data.ms'
    #     networks:
    #         - hexxore
    #     healthcheck:
    #         test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
    #         retries: 3
    #         timeout: 5s
    # minio:
    #     image: 'minio/minio:latest'
    #     ports:
    #         - '${FORWARD_MINIO_PORT:-9000}:9000'
    #         - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
    #     environment:
    #         MINIO_ROOT_USER: 'hexxore'
    #         MINIO_ROOT_PASSWORD: 'password'
    #     volumes:
    #         - 'hexxore-minio:/data/minio'
    #     networks:
    #         - hexxore
    #     command: minio server /data/minio --console-address ":8900"
    #     healthcheck:
    #         test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    #         retries: 3
    #         timeout: 5s
    # mailhog:
    #     image: 'mailhog/mailhog:latest'
    #     ports:
    #         - '${FORWARD_MAILHOG_PORT:-1025}:1025'
    #         - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    #     networks:
    #         - hexxore
    # selenium:
    #     image: 'selenium/standalone-chrome'
    #     volumes:
    #         - '/dev/shm:/dev/shm'
    #     networks:
    #         - hexxore

networks:
    hexxore:
        driver: bridge
volumes:
    hexxore-mysql:
        driver: local
    hexxore-mongodb:
        driver: local
#     hexxore-pgsql:
#         driver: local
#     hexxore-mariadb:
#         driver: local
#     hexxore-redis:
#         driver: local
#     hexxore-meilisearch:
#         driver: local
#     hexxore-minio:
#         driver: local